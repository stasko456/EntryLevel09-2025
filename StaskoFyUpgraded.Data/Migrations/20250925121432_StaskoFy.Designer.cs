// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StaskoFyUpgraded.Data.Data;

#nullable disable

namespace StaskoFyUpgraded.Data.Migrations
{
    [DbContext(typeof(StaskoFyUpgradedContext))]
    [Migration("20250925121432_StaskoFy")]
    partial class StaskoFy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DebutYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.ArtistAlbum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistId");

                    b.ToTable("ArtistsAlbums");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.ArtistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistsSongs");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<int>("SongCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.PlaylistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("SongId");

                    b.ToTable("PlaylistsSongs");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.ProducerAlbum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ProducerId");

                    b.ToTable("ProducersAlbums");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FavAlbumId")
                        .HasColumnType("int");

                    b.Property<int?>("FavArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("FavSongId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FavAlbumId");

                    b.HasIndex("FavArtistId");

                    b.HasIndex("FavSongId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.ArtistAlbum", b =>
                {
                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Album", "Album")
                        .WithMany("ArtistsAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Artist", "Artist")
                        .WithMany("ArtistsAlbums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.ArtistSong", b =>
                {
                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Artist", "Artist")
                        .WithMany("ArtistsSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Song", "Song")
                        .WithMany("ArtistsSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Playlist", b =>
                {
                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.User", "User")
                        .WithMany("Playlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.PlaylistSong", b =>
                {
                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Playlist", "Playlist")
                        .WithMany("PlaylistsSongs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Song", "Song")
                        .WithMany("PlaylistsSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.ProducerAlbum", b =>
                {
                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Album", "Album")
                        .WithMany("ProducersAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Producer", "Producer")
                        .WithMany("ProducersAlbums")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Song", b =>
                {
                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.User", b =>
                {
                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Album", "FavAlbum")
                        .WithMany()
                        .HasForeignKey("FavAlbumId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Artist", "FavArtist")
                        .WithMany()
                        .HasForeignKey("FavArtistId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StaskoFyUpgraded.Data.Data.Models.Song", "FavSong")
                        .WithMany()
                        .HasForeignKey("FavSongId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("FavAlbum");

                    b.Navigation("FavArtist");

                    b.Navigation("FavSong");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Album", b =>
                {
                    b.Navigation("ArtistsAlbums");

                    b.Navigation("ProducersAlbums");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Artist", b =>
                {
                    b.Navigation("ArtistsAlbums");

                    b.Navigation("ArtistsSongs");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistsSongs");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Producer", b =>
                {
                    b.Navigation("ProducersAlbums");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.Song", b =>
                {
                    b.Navigation("ArtistsSongs");

                    b.Navigation("PlaylistsSongs");
                });

            modelBuilder.Entity("StaskoFyUpgraded.Data.Data.Models.User", b =>
                {
                    b.Navigation("Playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
